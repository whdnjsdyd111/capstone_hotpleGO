server.port=8000
hostUrl=http//localhost:8000/

spring.devtools.restart.enabled=true
spring.thymeleaf.cache=false


#spring.datasource.url=jdbc:oracle:thin:@hotplego_high?TNS_ADMIN=C:/oraclexe/Wallet_hotpleGO
#spring.datasource.username=ADMIN
#spring.datasource.password=h-67.uqJnDF@.kU
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe
spring.datasource.username=hotpleGO
spring.datasource.password=hotpleGO

spring.datasource.hikari.maximum-pool-size=4

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
#logging.level.org.hibernate.type.descriptor.sql=trace

mybatis.type-aliases-package=com.example.demo
mybatis.mapper-locations=mybatis/*.xml

spring.servlet.multipart.location=C:\\upload\\temp
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=40MB
spring.servlet.multipart.file-size-threshold=20MB

## naver
# registration
spring.security.oauth2.client.registration.naver.client-id=HLOEGF61hXnrqSeJwX4P
spring.security.oauth2.client.registration.naver.client-secret=8iy9Xg0IQX
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=email
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

## google
# registration
spring.security.oauth2.client.registration.google.client-id=413356119561-fou76q12bfve0tscara411v4caasgk7b.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=gmPOhQuQiRTREI9Js7OLSjWK
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/userinfo.email,\
  https://www.googleapis.com/auth/userinfo.profile

## Facebook
spring.security.oauth2.client.registration.facebook.client-id=476599460003762
spring.security.oauth2.client.registration.facebook.client-secret=d9c41aff48527f09718b587b0e54158d
spring.security.oauth2.client.registration.facebook.scope=public_profile,email


## kakao
# registration
spring.security.oauth2.client.registration.kakao.client-id=6c4a98f325b36d6bcaf664e3c6e72234
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-authentication-method=post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=account_email,profile
spring.security.oauth2.client.registration.kakao.client-name=kakao

#provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=kakao_account


spring.profiles.include=oauth