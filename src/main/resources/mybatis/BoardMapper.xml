<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/schema/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.web.BoardMapper">

    <sql id="criteria">
        <trim prefix="(" suffix=") AND" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            bdTitle LIKE '%'||#{keyword}||'%'
                        </when>
                        <when test="type == 'C'.toString()">
                            bdCont LIKE '%'||#{keyword}||'%'
                        </when>
                        <when test="type == 'W'.toString()">
                            nick LIKE '%'||#{keyword}||'%'
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <sql id="boardColumns">
        bdCode, bdTitle, bdCont, bdRdCount, bdRecy, bdRecn, uCode
    </sql>

    <select id="getBoardList" resultType="BoardVO">
        SELECT bdCode, bdTitle, bdRdCount, bdRecy, bdCont, bdRecn, commcnt, nick
        FROM (
            SELECT ROWNUM rn, bdCode, bdTitle, bdRdCount, bdRecy, bdCont, bdRecn, commcnt, nick
            FROM ( SELECT b.bdCode, b.bdTitle, b.bdRdCount, b.bdRecy,
                    b.bdCont, b.bdRecn, com.commcnt, u.nick
                    FROM board b NATURAL JOIN users u FULL OUTER JOIN
                    (SELECT bdcode, COUNT(*) as commcnt FROM comm GROUP BY bdCode) COM
                    ON(b.bdCode = COM.bdCode) ORDER BY bdCode DESC)
            WHERE

            <include refid="criteria" />

        <![CDATA[
            ROWNUM <= #{pageNum} * #{amount}
            )
            WHERE rn > (#{pageNum} - 1) * #{amount}
        ]]>
    </select>

    <select id="getBoardsByKeyword" resultType="BoardVO">
        SELECT b.bdCode, b.bdTitle, b.bdRdCount, b.bdRecy, b.bdCont, b.bdRecn, c.commCnt, u.nick
        FROM board b NATURAL JOIN users u FULL OUTER JOIN
            (SELECT bdCode, COUNT(*) AS commCnt FROM comm GROUP BY bdCode) c
            ON(b.bdCode = c.bdCode) ORDER BY bdCode DESC
            <if test="keyword != null">
                WHERE bdTitle LIKE '%' || #{keyword} '%' OR bdCont LIKE '%' || #{keyword} '%' OR nick '%' || #{keyword} '%'
            </if>
    </select>

    <select id="getTotalBd" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT b.bdTitle title, b.bdCont bdCont, u.nick nick
        FROM board b NATURAL JOIN users u WHERE
        <include refid="criteria" />
        bdCode IS NOT NULL )
    </select>

    <select id="getBoardCodes" resultType="String">
        SELECT bdCode FROM board WHERE uCode = #{uCode}
    </select>



    <select id="getBookmarkList" resultType="BoardVO">
        SELECT b.bdCode, b.bdTitle, b.bdRdCount, b.bdRecy, b.bdCont, b.bdRecn, com.commcnt, u.nick
        FROM board b NATURAL JOIN users u FULL OUTER JOIN (SELECT bdcode, COUNT(*) as commcnt FROM comm GROUP BY bdcode) COM ON(b.bdCode = COM.bdCode)
        JOIN board_bookmark m ON(m.bdCode = b.bdCode) WHERE m.uCode = #{uCode} ORDER BY m.bRegDate DESC
    </select>

    <select id="selectCheck" resultType="String">
        SELECT bdCode FROM board WHERE bdCode = #{bdCode} AND uCode = #{uCode}
    </select>

    <select id="selectBoardDetail" resultType="BoardVO">
        SELECT board.*, users.nick FROM board, users
        WHERE bdCode = #{bdCode} and users.uCode = board.uCode
    </select>


    <insert id="insertBoard">
        INSERT INTO board (
        bdCode, bdTitle, bdCont, uCode
        ) VALUES(TO_CHAR(SYSTIMESTAMP, 'RRMMDDHH24MISS/') || LPAD(seq_bd.NEXTVAL, 2, '0') || '/N',
        #{bdTitle},
        #{bdCont},
        <!--        #{bdRdCount},-->
        <!--        #{bdRecy},-->
        <!--        #{bdRecn},-->
        #{uCode}
        )
    </insert>

    <update id="updateBoard">
        UPDATE board SET bdTitle = #{bdTitle}, bdCont = #{bdCont} WHERE bdCode = #{bdCode}
    </update>

    <delete id="deleteBoard">
        DELETE FROM board WHERE bdCode = #{bdCode} AND uCode = #{uCode}
    </delete>

    <update id="upView">
        UPDATE board SET bdRdCount = bdRdCount + 1 WHERE bdCode = #{bdCode}
    </update>

    <!-- 추천 비추천 시작 -->

    <update id="recommendUp">
        UPDATE board SET bdRecy = bdRecy + 1 WHERE bdCode = #{bdCode}
    </update>

    <update id="recommendDown">
        UPDATE board SET bdRecy = bdRecy - 1 WHERE bdCode = #{bdCode}
    </update>

    <update id="unRecommendUp">
        UPDATE board SET bdRecn = bdRecn + 1 WHERE bdCode = #{bdCode}
    </update>

    <update id="unRecommendDown">
        UPDATE board SET bdRecn = bdRecn - 1 WHERE bdCode = #{bdCode}
    </update>

    <insert id="insertReco">
        INSERT INTO board_reco (bdCode, uCode, reco) VALUES(#{bdCode}, #{uCode}, #{reco})
    </insert>

    <delete id="deleteReco">
        DELETE FROM board_reco WHERE bdCode = #{bdCode} AND uCode = #{uCode}
    </delete>

    <update id="updateReco">
        UPDATE board_reco SET reco = #{reco} WHERE bdCode = #{bdCode} AND uCode = #{uCode}
    </update>

    <select id="getReco" resultType="String">
        SELECT reco FROM board_reco WHERE bdCode = #{bdCode} AND uCode = #{uCode}
    </select>

    <!-- 추천 비추천 끝 -->

    <select id="getBookmark" resultType="String">
        SELECT bdCode FROM board_bookmark WHERE bdCode = #{bdCode} AND uCode = #{uCode}
    </select>

    <delete id="deleteBookmark">
        DELETE FROM board_bookmark WHERE bdCode = #{bdCode} AND uCode = #{uCode}
    </delete>

    <insert id="insertBookmark">
        INSERT INTO board_bookmark(bdCode, uCode) VALUES (#{bdCode}, #{uCode})
    </insert>

</mapper>
